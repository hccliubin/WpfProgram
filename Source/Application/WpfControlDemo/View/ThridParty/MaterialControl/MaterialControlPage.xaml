<Page x:Class="WpfControlDemo.View.MaterialControlPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:WpfControlDemo.View"
      xmlns:wpf="clr-namespace:HeBianGu.Controls.MaterialControl;assembly=HeBianGu.Control.MaterialControl"
      
     xmlns:showMeTheXaml="clr-namespace:ShowMeTheXAML;assembly=ShowMeTheXAML"
     xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
     xmlns:smtxAe="clr-namespace:ShowMeTheXAML.AvalonEdit;assembly=ShowMeTheXAML.AvalonEdit"
      xmlns:system="clr-namespace:System;assembly=mscorlib"
      mc:Ignorable="d" 
      d:DesignHeight="300" d:DesignWidth="300"
      Title="DrawHostPage">

    <Page.Resources>
        <!--<ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>


                <ResourceDictionary Source="pack://application:,,,/HeBianGu.Control.MaterialControl;component/Themes/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/HeBianGu.Control.MaterialControl;component/Themes/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/HeBianGu.Control.MaterialControl;component/Resource/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/HeBianGu.Control.MaterialControl;component/Resource/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                -->
        <!--<ResourceDictionary Source="pack://application:,,,/ShowMeTheXAML.AvalonEdit;component/Themes/xamldisplayer.xaml" />-->

        <!--<ResourceDictionary Source="pack://application:,,,/HeBianGu.Control.MaterialControl;component/Themes/Generic.xaml" />-->
        <!--


                <ResourceDictionary Source="pack://application:,,,/HeBianGu.Control.MaterialControl;component/Themes/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/HeBianGu.Control.MaterialControl;component/Themes/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/HeBianGu.Control.MaterialControl;component/Themes/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>-->

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/HeBianGu.Control.MaterialControl;component/Themes/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/HeBianGu.Control.MaterialControl;component/Themes/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/HeBianGu.Control.MaterialControl;component/Resource/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/HeBianGu.Control.MaterialControl;component/Resource/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                
                
                <ResourceDictionary Source="pack://application:,,,/ShowMeTheXAML.AvalonEdit;component/Themes/xamldisplayer.xaml" />

                <ResourceDictionary Source="pack://application:,,,/HeBianGu.Control.MaterialControl;component/Themes/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/HeBianGu.Control.MaterialControl;component/Themes/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/HeBianGu.Control.MaterialControl;component/Themes/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="showMeTheXaml:XamlDisplay" BasedOn="{StaticResource {x:Type showMeTheXaml:XamlDisplay}}">
                <Style.Resources>
                    <ResourceDictionary>
                        <ResourceDictionary.MergedDictionaries>
                            <ResourceDictionary Source="pack://application:,,,/HeBianGu.Control.MaterialControl;component/Themes/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                        </ResourceDictionary.MergedDictionaries>

                        <smtxAe:TextDocumentValueConverter x:Key="TextDocumentValueConverter"/>
                    </ResourceDictionary>
                </Style.Resources>
                <Setter Property="VerticalContentAlignment" Value="Bottom" />
                <Setter Property="HorizontalContentAlignment" Value="Right" />
                <Setter Property="wpf:XamlDisplayEx.ButtonDock" Value="Right" />
                <Setter Property="Formatter">
                    <Setter.Value>
                        <showMeTheXaml:XamlFormatter NewLineOnAttributes="True" Indent="  ">
                            <showMeTheXaml:XamlFormatter.NamespacesToRemove>
                                <system:String>http://materialdesigninxaml.net/winfx/xaml/themes</system:String>
                            </showMeTheXaml:XamlFormatter.NamespacesToRemove>
                        </showMeTheXaml:XamlFormatter>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="showMeTheXaml:XamlDisplay">
                            <DockPanel>
                                <wpf:PopupBox DockPanel.Dock="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:XamlDisplayEx.ButtonDock)}"
                                                         Padding="10" StaysOpen="True" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                         x:Name="PopupBox">
                                    <wpf:PopupBox.ToggleContent>
                                        <wpf:PackIcon Kind="Xaml" Cursor="Hand" ToolTip="View XAML" 
                                                                 Foreground="{DynamicResource PrimaryHueDarkBrush}" 
                                                                 Background="Transparent" 
                                                                 Margin="3">
                                            <wpf:PackIcon.Style>
                                                <Style TargetType="wpf:PackIcon" BasedOn="{StaticResource {x:Type wpf:PackIcon}}">
                                                    <Setter Property="Opacity" Value="0.2" />
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Opacity" Value="1" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </wpf:PackIcon.Style>
                                        </wpf:PackIcon>
                                    </wpf:PopupBox.ToggleContent>
                                    <Border MaxHeight="600" MaxWidth="800">
                                        <DockPanel>
                                            <Button
                                                Margin="0 10 0 0"
                                                Tag="{Binding Xaml, RelativeSource={RelativeSource TemplatedParent}}"
                                                HorizontalAlignment="Right"
                                                Command="Copy"
                                                CommandParameter="{Binding Xaml, RelativeSource={RelativeSource TemplatedParent}}"
                                                Content="_COPY"
                                                DockPanel.Dock="Bottom"
                                                Style="{StaticResource MaterialDesignRaisedButton}">
                                            </Button>
                                            <avalonEdit:TextEditor Document="{Binding Xaml, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TextDocumentValueConverter}}" 
                                                                   Style="{StaticResource AvalonTextEditorXamlDisplay}" />
                                        </DockPanel>
                                    </Border>

                                </wpf:PopupBox>
                                <Grid>
                                    <AdornerDecorator>
                                        <Border BorderBrush="{DynamicResource SecondaryAccentBrush}" Opacity=".4" Margin="-5">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="BorderThickness" Value="0" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=PopupBox, Path=IsPopupOpen}" Value="True">
                                                            <Setter Property="BorderThickness" Value="5" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                        </Border>
                                    </AdornerDecorator>
                                    <ContentPresenter />
                                </Grid>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        <wpf:DialogHost Identifier="RootDialog" SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}" Background="Yellow">
            <wpf:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
                <wpf:DrawerHost.LeftDrawerContent>
                    <DockPanel MinWidth="212">
                        <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                                    DockPanel.Dock="Top"
                                    HorizontalAlignment="Right" Margin="16"
                                    IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />
                        <ListBox x:Name="DemoItemsListBox" Margin="0 16 0 16" SelectedIndex="0"                         
                             ItemsSource="{Binding DemoItems}"
                             PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp">
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type wpf:DemoItem}">
                                    <TextBlock Text="{Binding Name}" Margin="32 0 32 0" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                </wpf:DrawerHost.LeftDrawerContent>

                <DockPanel>
                    <wpf:ColorZone Padding="16"  Mode="PrimaryMid" DockPanel.Dock="Top">
                        <DockPanel>

                            <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" IsChecked="False"
                                        x:Name="MenuToggleButton"/>

                            <wpf:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges" StaysOpen="False">
                                <StackPanel>
                                    <Button Content="Hello World" Click="MenuPopupButton_OnClick"/>
                                    <Button Content="Nice Popup" Click="MenuPopupButton_OnClick"/>
                                    <Button Content="Can't Touch This" IsEnabled="False" />
                                    <Separator/>
                                    <Button Content="Goodbye" Click="MenuPopupButton_OnClick"/>
                                </StackPanel>
                            </wpf:PopupBox>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22">Material Design In XAML Toolkit</TextBlock>
                        </DockPanel>
                    </wpf:ColorZone>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <!--<DocumentationLinks DataContext="{Binding ElementName=DemoItemsListBox, Path=SelectedItem}"
                                                Margin="0 0 0 16" />-->

                        <ScrollViewer Grid.Row="1" 
                                  HorizontalScrollBarVisibility="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.HorizontalScrollBarVisibilityRequirement}"
                                  VerticalScrollBarVisibility="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.VerticalScrollBarVisibilityRequirement}" 
                                  Padding="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.MarginRequirement}">

                            <ContentControl Content="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.Content}" />

                        </ScrollViewer>

                        <wpf:Snackbar MessageQueue="{wpf:MessageQueue}" x:Name="MainSnackbar"  Grid.Row="1" />
                    </Grid>
                </DockPanel>
            </wpf:DrawerHost>
        </wpf:DialogHost>
    </Grid>
</Page>
