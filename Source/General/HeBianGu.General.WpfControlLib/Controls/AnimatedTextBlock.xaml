<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Style/FIcon.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <Style TargetType="{x:Type local:MetroTabItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="MinWidth" Value="150"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MetroTabItem}">
                    <Grid Background="#00000000">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="iconWidth" Width="Auto"/>
                            <ColumnDefinition x:Name="contentWidth"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <!--<DoubleAnimation Storyboard.TargetName="back" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0:0:02"/>-->
                                        <!--<ColorAnimation Storyboard.TargetName="title" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="#A5000000" Duration="0:0:0.2"/>-->
                                        <!--<DoubleAnimation Storyboard.TargetName="icon" Storyboard.TargetProperty="(UIElement.Opacity)" To="0" Duration="0:0:0.2"/>-->
                                        <!--<DoubleAnimation Storyboard.TargetName="iconMove" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0:0:0.2"/>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="back" Grid.ColumnSpan="2" Fill="{DynamicResource S_WhiteNotice}" Opacity="0"/>

                        <Rectangle x:Name="backstory" Grid.ColumnSpan="2" Fill="{DynamicResource S_WhiteNotice}" Opacity="0"/>

                        <TextBlock x:Name="icon" Style="{StaticResource FIcon}" Foreground="{DynamicResource S_WhiteNotice}"  Width="24" Height="24" Margin="10,8" Text="{TemplateBinding Icon}"/>
                        
                        <TextBlock x:Name="title" Grid.Column="2" Text="{TemplateBinding Header}" Foreground="{DynamicResource S_WhiteNotice}" Margin="0,0,15,0" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding TextHorizontalAlignment}"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            
                            <Setter TargetName="backstory" Property="Fill" Value="{DynamicResource S_WhiteNotice}"/>
                            <Setter TargetName="title" Property="Foreground" Value="{DynamicResource S_AccentBrush}"/>
                            <Setter TargetName="icon" Property="Foreground" Value="{DynamicResource S_AccentBrush}"/>

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="backstory" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="backstory" Storyboard.TargetProperty="(UIElement.Opacity)" To="0" Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            
                        </Trigger>

                        <Trigger Property="Selector.IsSelected" Value="True">

                            <Setter TargetName="back" Property="Opacity" Value="1"/>
                            <Setter TargetName="back" Property="Fill" Value="{DynamicResource S_WhiteNotice}"/>
                            <Setter TargetName="title" Property="Foreground" Value="{DynamicResource S_AccentBrush}"/>
                            <Setter TargetName="icon" Property="Foreground" Value="{DynamicResource S_AccentBrush}"/>

                        </Trigger>

                        <!-- Icon 已经列为必须存在项，所以不隐藏区域 -->
                        <!--
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="iconWidth" Property="Width" Value="0"/>
                            <Setter TargetName="title" Property="Margin" Value="15,0"/>
                        </Trigger>
                        -->
                       
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
