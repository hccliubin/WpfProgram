<UserControl x:Class="HeBianGu.MovieBrower.UserControls.MovieGridUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:local="clr-namespace:HeBianGu.MovieBrower.UserControls"
               xmlns:base="clr-namespace:HeBianGu.Base.WpfBase;assembly=HeBianGu.Base.WpfBase"
             xmlns:wpfcontrollib="clr-namespace:HeBianGu.General.WpfControlLib;assembly=HeBianGu.General.WpfControlLib"
             xmlns:i1="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:evaluatecontrol="clr-namespace:HeBianGu.MovieBrower.UserControls.EvaluateControl"
             xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" >

    <!--<DataGrid Name="dg_Main" Grid.Row="0" ItemsSource="{Binding CommonSource}"  HeadersVisibility="Column" SelectedItem="{Binding SelectItem}">
        <DataGrid.Columns>

            <DataGridCheckBoxColumn Header="选中" Width="50" Binding="{Binding IsCheck}"/>

            <DataGridTemplateColumn Width="50" >
                <DataGridTemplateColumn.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock Text="图标" />
                    </DataTemplate>
                </DataGridTemplateColumn.HeaderTemplate>

                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Image Width="30" Margin="2,2,2,1"  
                                   Source="{Binding ImagePath,Converter={StaticResource iconConverter}}">
                            <Image.OpacityMask>
                                -->
    <!--设置图片背景色包含转换规则-->
    <!--
                                <ImageBrush ImageSource="{Binding ImagePath,Converter={StaticResource iconConverter}}"/>
                            </Image.OpacityMask>
                        </Image>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTextColumn Header="文件名称" Width="*" Binding="{Binding FileName}" />

            <DataGridTextColumn Header="上次访问时间" Width="*" Binding="{Binding LastTime}" />

            <DataGridTextColumn Header="评分" Width="*"  IsReadOnly="False" Binding="{Binding Score,Mode=TwoWay}" />

            <DataGridTemplateColumn Header="文件描述"  Width="*" IsReadOnly="True">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Viewbox>
                            <evaluatecontrol:EvaluateUserControl x:Name="fivePointStarGroup1" HorizontalAlignment="Stretch"   
                               VerticalAlignment="Stretch" SelectBackground="Yellow" Radius="30" 
                               UnSelectBackground="DarkGray" ItemsCount="5" SelectCount="{Binding Score,Mode=TwoWay}">
                            </evaluatecontrol:EvaluateUserControl>
                        </Viewbox>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTextColumn Header="类型" Width="*" Binding="{Binding Type}" />

            <DataGridTextColumn Header="访问次数" Width="*" Binding="{Binding Count}" />

        </DataGrid.Columns>


        <DataGrid.ContextMenu>
            <ContextMenu  StaysOpen="true">
                <MenuItem Header="打开" Command="{Binding RelayCommand}" CommandParameter="Open"/>
                <MenuItem Header="删除"  Command="{Binding RelayCommand}" CommandParameter="Open"/>
                <MenuItem Header="收藏"  Command="{Binding RelayCommand}" CommandParameter="Open"/>
                <MenuItem Header="彻底删除"  Command="{Binding RelayCommand}" CommandParameter="Open"/>
            </ContextMenu>
        </DataGrid.ContextMenu>
    </DataGrid>-->

    <UserControl.Resources>
        <collections:ArrayList x:Key="OrderItems">
            <system:String >名称</system:String>
            <system:String>最后访问时间</system:String>
            <system:String>评分</system:String>
            <system:String>类别</system:String>
            <system:String>大小</system:String>
        </collections:ArrayList>

        <!--文件项模板-->
        <DataTemplate  x:Key="MovieItemTemplate">

            <Grid  Width="1000" HorizontalAlignment="Left" Visibility="{Binding IsVisible}">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Grid.RenderTransform>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0.2*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="25" />
                </Grid.RowDefinitions>


                <wpfcontrollib:FCheckBox  Grid.Column="0" Grid.RowSpan="2" IsChecked="{Binding IsChecked}" HorizontalAlignment="Center" VerticalAlignment="Center" />

                <Grid  Margin="5,0" Grid.Column="1" Grid.RowSpan="2"  HorizontalAlignment="Center" VerticalAlignment="Center" >
                    <Image Width="30" Margin="2,2,2,1" Source="{Binding ImagePath,Converter={StaticResource iconConverter}}">
                        <Image.OpacityMask>
                            <!--设置图片背景色包含转换规则-->
                            <ImageBrush ImageSource="{Binding ImagePath,Converter={StaticResource iconConverter}}"/>
                        </Image.OpacityMask>
                    </Image>
                </Grid>

                <TextBlock  Margin="5,0"  Grid.Column="2" FontSize="15" Grid.ColumnSpan="8" ToolTip="{Binding FilePath}" VerticalAlignment="Center" HorizontalAlignment="Left"
                                   Text="{Binding FileName}" Foreground="Black" FontWeight="Bold"/>

                <TextBlock Margin="5,0" Grid.Column="5" Grid.Row="1" Text="{Binding LastTime}" HorizontalAlignment="Center" VerticalAlignment="Center" />

                <!--<TextBlock  Grid.Column="4"  Text="{Binding Type}"  Width="30" HorizontalAlignment="Center" VerticalAlignment="Center" />-->

                <!--<ComboBox  Margin="5,0" Grid.Column="4" Style="{StaticResource ClearButtonComboBox}" Width="20"   base:ControlAttachProperty.Watermark="请选择类别">
                    <ComboBoxItem Content="1"/>
                    <ComboBoxItem Content="2"/>
                    <ComboBoxItem Content="3"/>
                </ComboBox>-->

                <wpfcontrollib:MultiComboBox Margin="5,0" Background="Transparent" Grid.Row="1" Grid.Column="3" Height="20" IsEditable="True" ItemsSource="{x:Static local:LocalConfiger.Types}" SelectText="{Binding Type,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />

                <TextBlock  Margin="5,0" Grid.Column="4" Grid.Row="1"  Text="{Binding Count}" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center" />

                <TextBlock  Margin="5,0" Grid.Column="2" Grid.Row="1" Background="Transparent">
                            <Viewbox>
                                <evaluatecontrol:EvaluateUserControl x:Name="fivePointStarGroup1" HorizontalAlignment="Stretch"   
                               VerticalAlignment="Stretch" SelectBackground="Orange" Radius="30" Background="Transparent"
                               UnSelectBackground="DarkGray" ItemsCount="10" SelectCount="{Binding Score,Mode=TwoWay}">
                                </evaluatecontrol:EvaluateUserControl>
                            </Viewbox>
                </TextBlock>

                <!--<TextBlock  Margin="5,0" Grid.Column="7"  Text="{Binding Type,Mode=TwoWay}" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center" />

                <TextBlock  Margin="5,0" Grid.Column="8"  Text="{Binding Score,Mode=TwoWay}" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center" />-->


                <Grid.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard Storyboard="{StaticResource Story_OpacityLeftToRight}" />
                    </EventTrigger>
                </Grid.Triggers>
            </Grid>
        </DataTemplate>

        <!--文件集合样式-->
        <Style x:Key="MovieListStyle" TargetType="{x:Type ListBox}">
            <Setter Property="ItemTemplate" Value="{StaticResource MovieItemTemplate}"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <!--<Setter Property="Background" Value="{DynamicResource centernColorNLight}"/>-->
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="BorderThickness" Value="0,2,0,0"/>
            <Setter Property="AllowDrop"   Value="True"/>
            <!--<Setter Property="Background" Value="{DynamicResource centernColorNLight}"/>-->
            <Setter Property="OpacityMask">
                <Setter.Value>
                    <RadialGradientBrush>
                        <GradientStop Color="Black" Offset="0"/>
                        <GradientStop Color="White" Offset="0.861"/>
                    </RadialGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>

            <!--<Setter Property="Template" Value="{StaticResource ListBox_Buzy}"/>-->

        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--<Border BorderThickness="1,1,1,1" Grid.RowSpan="2" BorderBrush="{StaticResource S_BlackNotice}"/>-->
        

        <StackPanel Orientation="Horizontal">

            <wpfcontrollib:FCheckBox Content="全选" Margin="10" FontSize="15"  Command="{Binding RelayCommand}" CommandParameter="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsChecked}" />

            <ComboBox Margin="10" ItemsSource="{StaticResource OrderItems}" base:ControlAttachProperty.Label="排序规则" SelectedIndex="{Binding OrderByIndex}"
                      Style="{StaticResource LabelComboBox}"  base:ControlAttachProperty.Watermark="没有选择排序" />

            <wpfcontrollib:MultiComboBox Margin="5,0" Background="White" Grid.Row="1"  
                                         base:ControlAttachProperty.Label="过滤规则:" Grid.Column="3"  IsEditable="True" 
                                         ItemsSource="{x:Static local:LocalConfiger.Types}" 
                                         SelectText="{Binding FilterType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                         Style="{StaticResource LabelClearButtonMultiComboBox}"/>

            <wpfcontrollib:FButton Margin="10" Content="刷新"  Command="{Binding RelayCommand}" CommandParameter="Refresh"/>
        </StackPanel>


        <ListBox Name="lb_list" Grid.Row="1"
            Style="{StaticResource MovieListStyle}"
                 ItemsSource="{Binding CommonSource}"
                 SelectedItem="{Binding SelectItem}"  FontSize="12" 
                 base:ControlAttachProperty.IsBuzy="{Binding IsBusyFlag}"
                 >
            <!--<ListBox.ContextMenu>
                <ContextMenu  StaysOpen="true">
                    --><!--<MenuItem Header="打开" Command="{Binding RelayCommand}" CommandParameter="Open"/>
                    <MenuItem Header="删除"  Command="{Binding RelayCommand}" CommandParameter="Open"/>
                    <MenuItem Header="收藏"  Command="{Binding RelayCommand}" CommandParameter="Open"/>
                    <MenuItem Header="彻底删除"  Command="{Binding RelayCommand}" CommandParameter="Open"/>
                    <MenuItem Header="插入图片"  Command="{Binding RelayCommand}" CommandParameter="Open"/>--><!--
                </ContextMenu>
            </ListBox.ContextMenu>-->
        </ListBox>


    </Grid>
</UserControl>
